fragment GameResponseFragment on GameResponse {
  gameId
  status
  cards {
    id
    name
  }
  players {
    playerId
    role
  }
  round {
    id
    name
    playerCards {
      playerId
      cardId
    }
  }
}

mutation NewGame($gameId: String!, $playerId: String!, $cards: [CardRequest!]!) {
  NewGame(gameId: $gameId, playerId: $playerId, cards: $cards) {
    ...GameResponseFragment
  }
}

mutation AddPlayer($gameId: String!, $playerId: String!) {
  AddPlayer(gameId: $gameId, playerId: $playerId) {
    ...GameResponseFragment
  }
}

mutation NewRound($gameId: String!, $playerId: String!, $roundId: String!, $roundName: String!) {
  NewRound(gameId: $gameId, playerId: $playerId, roundId: $roundId, roundName: $roundName) {
    ...GameResponseFragment
  }
}

mutation PlayCard($gameId: String!, $playerId: String!, $cardId: String!) {
  PlayCard(gameId: $gameId, playerId: $playerId, cardId: $cardId) {
    ...GameResponseFragment
  }
}

mutation EndRound($gameId: String!, $playerId: String!, $resultCardId: String!) {
  EndRound(gameId: $gameId, playerId: $playerId, resultCardId: $resultCardId) {
    ...GameResponseFragment
  }
}

query GetGame($id: String!) {
  GetGame(id: $id) {
    ...GameResponseFragment
  }
}

subscription OnGame($gameId: String!) {
  OnGame(gameId: $gameId) {
    ...GameResponseFragment
  }
}